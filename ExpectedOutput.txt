python3 testing.py
====== TEST 1 ======
this only tests the clock algorithm, buffer management features (pin and unpin) are not tested.
1) Creating a smaple buffer of five frames

2) Call the clock algorithm
.... clock algorithm chose frame 1 successfully.
.... Clock algorithm updated referenced attribute correctly.

Test 1 completed successfully....

======= TEST2 ======
Scenario: more pages than frames (number of pages = 2 * number of frames)

1) Create a buffer pool of five frames...

2) Try to pin 10 new pages and write something in each page
Requires that first five pages are evicted from buffer pool (and written to disk),
so the last five pages are pinned

.... Pinning of 10 pages suceeded

3) Try to read the content of the 10 created pages
.... Reading the 10 pages succeeded.

Test2 completed successfully...


======= TEST3 ======
Scenario: Buffer pool full, cannot pin another page!

1) Create a buffer pool of five frames

2) Pin five new pages without unpinning them

3) Try to pin a sixth page, since buffer pool is full (all pages in buffer have pinCount =1),
we should get a BufferPoolFullError exception
.... Expected BufferPoolFullError exception raised

4) Now unpin one of the five pages, so we have one available frame

5) Try to pin a sixth page, we should be able to do that this time
.... pinning a sixth page succeeded as expected

Test3 completed successfully...


All tests Completed sucessfully...
